#summary Description of BlobStore functionality.

= Introduction =

Description of BlobStore functionality.

= Details =

Multiple simultaneous uploads possible:
{{{
	<form action="<%=blobstoreService.createUploadUrl("/upload")%>"
		method="post" enctype="multipart/form-data">
		<input type="file" name="file1">
		<input type="file" name="file2">
		<input type="file" name="file3">
		<input type="submit" value="Submit">
	</form>
}}}

Servlet for _/upload_:
{{{
	public void doPost(final HttpServletRequest req,...)
		final Map<String, BlobKey> blobs = this.blobstoreService.getUploadedBlobs(req);
		...
		// no out allowed, only 1 final redirect!
		res.sendRedirect(...);
	}
}}}

Metadata like Filename via BlobInfo requestable:
http://code.google.com/appengine/docs/java/javadoc/com/google/appengine/api/blobstore/BlobInfo.html

But better to request connected datastore entity {{{__BlobInfo__}}}:

{{{
Class: com.google.appengine.api.datastore.Entity
AppId: s~decojer
Kind: __BlobInfo__
Namespace: 
Key: __BlobInfo__("AMIfv95gf-PWTSzU4kVzZCFm39hth1owEoAvsJtsAGnGtoVZdO8uGxAZfNujO8i2q6A0cSh_HQEpf6t6u24emXEMxbCMRHtQtCWgIDZ4DA4L6_TLSxL4Ag8VX6fBNx0-6ladI9SoVllEfJWALcBp9i7x97V9TYP0GA")
Parent: null
Props: {filename=test.jar, creation=Tue Jul 05 21:49:28 UTC 2011, md5_hash=b670791e84d4d61d39177989ad851d9c, content_type=application/octet-stream, size=13424}
}}}

Property md5_hash already created through uploader (currently not local)! Good for finding duplicates!

{{{
	// get associated blob info entity __BlobInfo__ from BlobKey
	final Key blobInfoEntityKey = KeyFactory.createKey("__BlobInfo__", blobKey.getKeyString());
	// e.g. query entity
	final Query blobInfoQuery = new Query("__BlobInfo__");
	blobInfoQuery.addFilter("__key__", Query.FilterOperator.EQUAL, blobInfoEntityKey);
	Entity blobInfoEntity = datastoreService.prepare(q).asSingleEntity();

	// get blob from associated blob info entity
	final BlobKey blobKey = new BlobKey(blobInfoEntity.getKey().getName());
	// e.g. read stream or serve()
	BlobstoreInputStream blobstoreInputStream = new BlobstoreInputStream(blobKey);
}}}